FROM node:18-alpine AS builder

# Set working directory
WORKDIR /app

# Copy package.json and package-lock.json
COPY package.json  ./

# Install dependencies
RUN npm install --frozen-lockfile

# Ensure pino-pretty is installed
RUN npm install pino-pretty

# Copy the rest of the project files
COPY . .

ARG NEXT_PUBLIC_SUPABASE_URL
ENV NEXT_PUBLIC_SUPABASE_URL=${NEXT_PUBLIC_SUPABASE_URL}

ARG NEXT_PUBLIC_SUPABASE_ANON_KEY
ENV NEXT_PUBLIC_SUPABASE_ANON_KEY=${NEXT_PUBLIC_SUPABASE_ANON_KEY}


ARG NEXT_PUBLIC_API_URL
ENV NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL}

ARG NEXT_PUBLIC_BACKEND_URL
ENV NEXT_PUBLIC_BACKEND_URL=${NEXT_PUBLIC_BACKEND_URL}

# Build the Next.js app
RUN npm run build

# Use a minimal Node.js image for production
FROM node:18-alpine AS runner
WORKDIR /app

# Copy built application from the builder stage
COPY --from=builder /app .

# Expose the application port
EXPOSE 3000

# Start the Next.js application
CMD ["npm", "run", "start"]